"use strict";(self.webpackChunkdocs_spa=self.webpackChunkdocs_spa||[]).push([[9730],{417:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>h,frontMatter:()=>s,metadata:()=>d,toc:()=>l});var i=t(4848),r=t(8453);const s={},a=void 0,d={id:"autobot-admin/client-node-package/entity",title:"entity",description:"Documentation: ClientNodeEntity Class",source:"@site/docs/autobot-admin/client-node-package/entity.md",sourceDirName:"autobot-admin/client-node-package",slug:"/autobot-admin/client-node-package/entity",permalink:"/autobot-docs/docs/autobot-admin/client-node-package/entity",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/autobot-admin/client-node-package/entity.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"overview",permalink:"/autobot-docs/docs/autobot-admin/client-node-package/overview"},next:{title:"client-node-controller",permalink:"/autobot-docs/docs/autobot-admin/client-node-package/client-node-controller"}},o={},l=[{value:"Documentation: <code>ClientNodeEntity</code> Class",id:"documentation-clientnodeentity-class",level:3},{value:"<strong>Class Declaration and Annotations</strong>",id:"class-declaration-and-annotations",level:4},{value:"<strong>Primary Key</strong>",id:"primary-key",level:4},{value:"<strong>Node and System Information</strong>",id:"node-and-system-information",level:4},{value:"<strong>Formatted Strings for CPU, Memory, and Disk Info</strong>",id:"formatted-strings-for-cpu-memory-and-disk-info",level:4},{value:"<strong>Network Information</strong>",id:"network-information",level:4},{value:"<strong>UUID and Registration</strong>",id:"uuid-and-registration",level:4},{value:"<strong>Additional Hardware Information</strong>",id:"additional-hardware-information",level:4},{value:"<strong>Timestamps</strong>",id:"timestamps",level:4}];function c(e){const n={code:"code",h3:"h3",h4:"h4",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.h3,{id:"documentation-clientnodeentity-class",children:["Documentation: ",(0,i.jsx)(n.code,{children:"ClientNodeEntity"})," Class"]}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"ClientNodeEntity"})," class represents a client node (typically a computer or server) in the system. It is mapped to a database table through JPA annotations and holds various attributes related to hardware, software, and network specifications. This entity also tracks the node\u2019s UUID, registration information, and status. The class uses Hibernate for automatic creation and update timestamps and Lombok for generating boilerplate code like getters and setters."]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h4,{id:"class-declaration-and-annotations",children:(0,i.jsx)(n.strong,{children:"Class Declaration and Annotations"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'@Entity\n@Getter @Setter\n//@Table( name = "client_node_entity" )\npublic class ClientNodeEntity {\n'})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"@Entity"})}),": Marks the class as a JPA entity, which will be mapped to a table in the database."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsxs)(n.strong,{children:[(0,i.jsx)(n.code,{children:"@Getter"})," and ",(0,i.jsx)(n.code,{children:"@Setter"})]}),": Lombok annotations to automatically generate getter and setter methods for all fields."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsxs)(n.strong,{children:["(Optional) ",(0,i.jsx)(n.code,{children:'@Table(name = "client_node_entity")'})]}),": This annotation is commented out but, if used, would specify the name of the table as ",(0,i.jsx)(n.code,{children:"client_node_entity"})," in the database."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h4,{id:"primary-key",children:(0,i.jsx)(n.strong,{children:"Primary Key"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:"@NonNull\n@Id\n@GeneratedValue(strategy = GenerationType.AUTO)\nprivate Long id;\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"@Id"})}),": Marks ",(0,i.jsx)(n.code,{children:"id"})," as the primary key of the entity."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"@GeneratedValue(strategy = GenerationType.AUTO)"})}),": Specifies that the primary key will be auto-generated."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"@NonNull"})}),": Ensures that the ",(0,i.jsx)(n.code,{children:"id"})," cannot be null when working with this entity."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h4,{id:"node-and-system-information",children:(0,i.jsx)(n.strong,{children:"Node and System Information"})}),"\n",(0,i.jsx)(n.p,{children:"The following fields capture detailed information about the hardware and software specifications of the client node:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:"private String ipAddress;\nprivate String sysModel;\nprivate String sysSerial;\nprivate String sysOEM;\nprivate String osDistribution;\nprivate String osArchitecture;\nprivate String osHostname;\nprivate String cpuManufacturer;\nprivate String cpuBrand;\nprivate int cpuProcessors;\nprivate int cpuPhysicalCores;\nprivate int cpuCores;\nprivate Long cpuSpeed;\nprivate Long cpuMaxSpeed;\nprivate Long memSize;\nprivate Long memSizeTotalAvailable;\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"ipAddress"})}),": The IP address of the client node."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"sysModel"})}),": The system model identifier."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"sysSerial"})}),": The system serial number."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"sysOEM"})}),": The Original Equipment Manufacturer (OEM) name."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"osDistribution"})}),", ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"osArchitecture"})}),", ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"osHostname"})}),": Information about the operating system, including its distribution (e.g., Ubuntu), architecture (e.g., 64-bit), and hostname."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"cpuManufacturer"})})," and ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"cpuBrand"})}),": CPU details such as the manufacturer and brand (e.g., Intel, AMD)."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"CPU Details"}),": Includes fields for CPU processors, physical cores, total cores, and speed metrics like ",(0,i.jsx)(n.code,{children:"cpuSpeed"})," and ",(0,i.jsx)(n.code,{children:"cpuMaxSpeed"}),"."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h4,{id:"formatted-strings-for-cpu-memory-and-disk-info",children:(0,i.jsx)(n.strong,{children:"Formatted Strings for CPU, Memory, and Disk Info"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:"private String memSizeStr;\nprivate String memSizeTotalAvailableStr;\nprivate String cpuSpeedStr;\nprivate String cpuMaxSpeedStr;\nprivate String dskType;\nprivate String dskSerial;\nprivate String dskSize;\nprivate String dskSizeStr;\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"These fields store formatted string representations of memory size, CPU speed, and disk size. This allows for more human-readable formats that are typically used when presenting system details in reports or logs."}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h4,{id:"network-information",children:(0,i.jsx)(n.strong,{children:"Network Information"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:"private String netInterface;\nprivate String netSpeed;\nprivate Long netSpeedLong;\nprivate String netMacAddress;\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"netInterface"})}),": The type of network interface (e.g., Ethernet, Wi-Fi)."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"netSpeed"})})," and ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"netSpeedLong"})}),": The speed of the network interface, stored as both a string and a numeric value."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"netMacAddress"})}),": The MAC address of the node\u2019s network interface."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h4,{id:"uuid-and-registration",children:(0,i.jsx)(n.strong,{children:"UUID and Registration"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:"@Column(unique = true)\nprivate String nodeUUID;\nprivate String uuidUniqueId;\nprivate String uuidThinId;\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"nodeUUID"})}),": The unique identifier for the node, which is marked as unique using ",(0,i.jsx)(n.code,{children:"@Column(unique = true)"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"uuidUniqueId"})})," and ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"uuidThinId"})}),": Additional UUID fields, possibly used for identifying the node in different contexts or services."]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:"private String candidateName;\nprivate String registrationNumber;\nprivate String status;\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"candidateName"})}),": The name assigned to the node (possibly linked to a user or candidate in a testing environment)."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"registrationNumber"})}),": The node\u2019s registration number."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"status"})}),': The current status of the node, such as "CONNECTED" or "DISCONNECTED".']}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h4,{id:"additional-hardware-information",children:(0,i.jsx)(n.strong,{children:"Additional Hardware Information"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:"private String motherBoardSerial;\nprivate String cpuProcessorID;\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"motherBoardSerial"})}),": Serial number of the motherboard."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"cpuProcessorID"})}),": Processor ID for the CPU, providing additional hardware identification."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h4,{id:"timestamps",children:(0,i.jsx)(n.strong,{children:"Timestamps"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:"@CreationTimestamp\nprivate Date createdAt;\n\n@UpdateTimestamp\nprivate Date updatedAt;\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"@CreationTimestamp"})}),": Automatically sets the value of ",(0,i.jsx)(n.code,{children:"createdAt"})," to the current timestamp when the entity is first persisted."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"@UpdateTimestamp"})}),": Automatically updates the value of ",(0,i.jsx)(n.code,{children:"updatedAt"})," whenever the entity is updated."]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>d});var i=t(6540);const r={},s=i.createContext(r);function a(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);