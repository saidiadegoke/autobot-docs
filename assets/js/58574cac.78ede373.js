"use strict";(self.webpackChunkdocs_spa=self.webpackChunkdocs_spa||[]).push([[1791],{2016:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>a,contentTitle:()=>l,default:()=>x,frontMatter:()=>t,metadata:()=>o,toc:()=>d});var i=n(4848),r=n(8453);const t={},l=void 0,o={id:"autobot-admin/exam-package/overview",title:"overview",description:"Structure Overview of exam Package",source:"@site/docs/autobot-admin/exam-package/overview.md",sourceDirName:"autobot-admin/exam-package",slug:"/autobot-admin/exam-package/overview",permalink:"/autobot-docs/docs/autobot-admin/exam-package/overview",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/autobot-admin/exam-package/overview.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"utilities",permalink:"/autobot-docs/docs/autobot-admin/client-node-package/utilities"},next:{title:"dtos",permalink:"/autobot-docs/docs/autobot-admin/exam-package/dtos"}},a={},d=[{value:"Structure Overview of <code>exam</code> Package",id:"structure-overview-of-exam-package",level:3},{value:"1. <strong>ExamController</strong>",id:"1-examcontroller",level:3},{value:"2. <strong>ExamControllerClient</strong>",id:"2-examcontrollerclient",level:3},{value:"3. <strong>ExamControllerSocket</strong>",id:"3-examcontrollersocket",level:3},{value:"4. <strong>ExamDefaultDTO</strong>",id:"4-examdefaultdto",level:3},{value:"5. <strong>ExamDefaultEntity</strong>",id:"5-examdefaultentity",level:3},{value:"6. <strong>ExamDefaultRepository</strong>",id:"6-examdefaultrepository",level:3},{value:"7. <strong>ExamDefaultServerDTO</strong>",id:"7-examdefaultserverdto",level:3},{value:"8. <strong>ExamNodeStatusEnum</strong>",id:"8-examnodestatusenum",level:3},{value:"9. <strong>ExamService</strong>",id:"9-examservice",level:3},{value:"10. <strong>ExamServiceImpl</strong>",id:"10-examserviceimpl",level:3},{value:"11. <strong>ExamServiceMemoryImpl</strong>",id:"11-examservicememoryimpl",level:3},{value:"12. <strong>ExamSessionDTO</strong>",id:"12-examsessiondto",level:3},{value:"13. <strong>ExamSessionEndNotificationDTO</strong>",id:"13-examsessionendnotificationdto",level:3},{value:"14. <strong>ExamSessionEntity</strong>",id:"14-examsessionentity",level:3},{value:"15. <strong>ExamSessionNodeDTO</strong>",id:"15-examsessionnodedto",level:3},{value:"16. <strong>ExamSessionNodeEntity</strong>",id:"16-examsessionnodeentity",level:3},{value:"17. <strong>ExamSessionNodeRepository</strong>",id:"17-examsessionnoderepository",level:3},{value:"18. <strong>ExamSessionRepository</strong>",id:"18-examsessionrepository",level:3},{value:"19. <strong>ExamSessionStartNotificationDTO</strong>",id:"19-examsessionstartnotificationdto",level:3},{value:"20. <strong>ExamStatusEnum</strong>",id:"20-examstatusenum",level:3},{value:"21. <strong>JoinExamRequestDTO</strong>",id:"21-joinexamrequestdto",level:3},{value:"22. <strong>NewExamRequestDTO</strong>",id:"22-newexamrequestdto",level:3},{value:"23. <strong>NewExamResponseDTO</strong>",id:"23-newexamresponsedto",level:3},{value:"24. <strong>RemoveReportsRequestDTO</strong>",id:"24-removereportsrequestdto",level:3},{value:"25. <strong>SubmitAnswerRequestDTO</strong>",id:"25-submitanswerrequestdto",level:3},{value:"26. <strong>SubmitAnswerResponseDTO</strong>",id:"26-submitanswerresponsedto",level:3},{value:"27. <strong>SubmitInstructionsEnum</strong>",id:"27-submitinstructionsenum",level:3},{value:"How These Components Work Together",id:"how-these-components-work-together",level:3},{value:"Conclusion",id:"conclusion",level:3}];function c(e){const s={code:"code",h3:"h3",hr:"hr",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(s.h3,{id:"structure-overview-of-exam-package",children:["Structure Overview of ",(0,i.jsx)(s.code,{children:"exam"})," Package"]}),"\n",(0,i.jsxs)(s.p,{children:["The ",(0,i.jsx)(s.code,{children:"exam"})," package, as seen in the attached image, is responsible for managing the exam lifecycle in the ",(0,i.jsx)(s.strong,{children:"AutoBot Admin"})," application. This package handles the creation, management, and tracking of exam sessions, as well as candidate participation and the submission of exam responses. Below is a detailed breakdown of each component within the ",(0,i.jsx)(s.code,{children:"exam"})," package:"]}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsxs)(s.h3,{id:"1-examcontroller",children:["1. ",(0,i.jsx)(s.strong,{children:"ExamController"})]}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Type"}),": Spring MVC Controller (",(0,i.jsx)(s.code,{children:"@RestController"}),")"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Purpose"}),": Handles incoming HTTP requests related to exam management."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Key Responsibilities"}),":","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Create new exams."}),"\n",(0,i.jsx)(s.li,{children:"Start, monitor, and end exam sessions."}),"\n",(0,i.jsx)(s.li,{children:"Manage exam configurations and responses."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.h3,{id:"2-examcontrollerclient",children:["2. ",(0,i.jsx)(s.strong,{children:"ExamControllerClient"})]}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Type"}),": Spring MVC Controller (",(0,i.jsx)(s.code,{children:"@RestController"}),")"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Purpose"}),": Likely handles client-side HTTP requests related to exam participation."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Key Responsibilities"}),":","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Manage client interactions during an exam session."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.h3,{id:"3-examcontrollersocket",children:["3. ",(0,i.jsx)(s.strong,{children:"ExamControllerSocket"})]}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Type"}),": WebSocket Controller"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Purpose"}),": Manages real-time communication during exam sessions using WebSockets."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Key Responsibilities"}),":","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Facilitate real-time exam monitoring and updates."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.h3,{id:"4-examdefaultdto",children:["4. ",(0,i.jsx)(s.strong,{children:"ExamDefaultDTO"})]}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Type"}),": Data Transfer Object (DTO)"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Purpose"}),": Represents the default settings for exams."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Key Responsibilities"}),":","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Encapsulate default exam settings such as duration, allowed attempts, and configuration options."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.h3,{id:"5-examdefaultentity",children:["5. ",(0,i.jsx)(s.strong,{children:"ExamDefaultEntity"})]}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Type"}),": JPA Entity (",(0,i.jsx)(s.code,{children:"@Entity"}),")"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Purpose"}),": Represents default exam settings as a database entity."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Key Responsibilities"}),":","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Store and persist default exam settings in the database."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.h3,{id:"6-examdefaultrepository",children:["6. ",(0,i.jsx)(s.strong,{children:"ExamDefaultRepository"})]}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Type"}),": Spring Data JPA Repository"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Purpose"}),": Provides an interface to interact with ",(0,i.jsx)(s.code,{children:"ExamDefaultEntity"}),"."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Key Responsibilities"}),":","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Perform CRUD operations on default exam settings."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.h3,{id:"7-examdefaultserverdto",children:["7. ",(0,i.jsx)(s.strong,{children:"ExamDefaultServerDTO"})]}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Type"}),": Data Transfer Object (DTO)"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Purpose"}),": Likely represents exam default settings sent from the server."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Key Responsibilities"}),":","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Transfer default settings data between the server and other components."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.h3,{id:"8-examnodestatusenum",children:["8. ",(0,i.jsx)(s.strong,{children:"ExamNodeStatusEnum"})]}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Type"}),": Enum"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Purpose"}),": Defines the different statuses a node in an exam session can have (e.g., active, completed, or disconnected)."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Key Responsibilities"}),":","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Standardize node statuses for an exam session."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.h3,{id:"9-examservice",children:["9. ",(0,i.jsx)(s.strong,{children:"ExamService"})]}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Type"}),": Service Interface"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Purpose"}),": Defines methods for managing exams, including their creation and monitoring."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Key Responsibilities"}),":","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Create and manage exams and exam sessions."}),"\n",(0,i.jsx)(s.li,{children:"Provide business logic for exam operations."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.h3,{id:"10-examserviceimpl",children:["10. ",(0,i.jsx)(s.strong,{children:"ExamServiceImpl"})]}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Type"}),": Service Implementation (",(0,i.jsx)(s.code,{children:"@Service"}),")"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Purpose"}),": Implements the ",(0,i.jsx)(s.code,{children:"ExamService"})," interface, handling the core business logic related to exam management."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Key Responsibilities"}),":","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Implement methods for starting, monitoring, and ending exams."}),"\n",(0,i.jsx)(s.li,{children:"Call repositories for exam data management."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.h3,{id:"11-examservicememoryimpl",children:["11. ",(0,i.jsx)(s.strong,{children:"ExamServiceMemoryImpl"})]}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Type"}),": Service Implementation (",(0,i.jsx)(s.code,{children:"@Service"}),")"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Purpose"}),": A memory-based implementation of ",(0,i.jsx)(s.code,{children:"ExamService"}),"."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Key Responsibilities"}),":","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Likely stores exam data in memory for faster access during runtime."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.h3,{id:"12-examsessiondto",children:["12. ",(0,i.jsx)(s.strong,{children:"ExamSessionDTO"})]}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Type"}),": Data Transfer Object (DTO)"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Purpose"}),": Represents a session of an exam."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Key Responsibilities"}),":","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Encapsulate data about an ongoing exam session, such as participant information, status, and timing."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.h3,{id:"13-examsessionendnotificationdto",children:["13. ",(0,i.jsx)(s.strong,{children:"ExamSessionEndNotificationDTO"})]}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Type"}),": Data Transfer Object (DTO)"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Purpose"}),": Represents a notification when an exam session ends."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Key Responsibilities"}),":","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Transfer data related to the end of an exam session to other parts of the system."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.h3,{id:"14-examsessionentity",children:["14. ",(0,i.jsx)(s.strong,{children:"ExamSessionEntity"})]}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Type"}),": JPA Entity (",(0,i.jsx)(s.code,{children:"@Entity"}),")"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Purpose"}),": Represents an exam session as a database entity."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Key Responsibilities"}),":","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Store and persist information about individual exam sessions."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.h3,{id:"15-examsessionnodedto",children:["15. ",(0,i.jsx)(s.strong,{children:"ExamSessionNodeDTO"})]}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Type"}),": Data Transfer Object (DTO)"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Purpose"}),": Represents the individual nodes (e.g., client computers) participating in an exam session."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Key Responsibilities"}),":","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Encapsulate node-specific data, such as connection status, during an exam."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.h3,{id:"16-examsessionnodeentity",children:["16. ",(0,i.jsx)(s.strong,{children:"ExamSessionNodeEntity"})]}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Type"}),": JPA Entity (",(0,i.jsx)(s.code,{children:"@Entity"}),")"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Purpose"}),": Represents a node within an exam session as a database entity."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Key Responsibilities"}),":","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Store and persist data about nodes participating in an exam session."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.h3,{id:"17-examsessionnoderepository",children:["17. ",(0,i.jsx)(s.strong,{children:"ExamSessionNodeRepository"})]}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Type"}),": Spring Data JPA Repository"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Purpose"}),": Provides an interface to interact with ",(0,i.jsx)(s.code,{children:"ExamSessionNodeEntity"}),"."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Key Responsibilities"}),":","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Perform CRUD operations on node data in exam sessions."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.h3,{id:"18-examsessionrepository",children:["18. ",(0,i.jsx)(s.strong,{children:"ExamSessionRepository"})]}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Type"}),": Spring Data JPA Repository"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Purpose"}),": Provides an interface to interact with ",(0,i.jsx)(s.code,{children:"ExamSessionEntity"}),"."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Key Responsibilities"}),":","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Perform CRUD operations on exam session data."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.h3,{id:"19-examsessionstartnotificationdto",children:["19. ",(0,i.jsx)(s.strong,{children:"ExamSessionStartNotificationDTO"})]}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Type"}),": Data Transfer Object (DTO)"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Purpose"}),": Represents a notification when an exam session starts."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Key Responsibilities"}),":","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Transfer data about the start of an exam session to other system components."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.h3,{id:"20-examstatusenum",children:["20. ",(0,i.jsx)(s.strong,{children:"ExamStatusEnum"})]}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Type"}),": Enum"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Purpose"}),": Defines the various statuses an exam can have (e.g., pending, started, completed)."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Key Responsibilities"}),":","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Standardize exam statuses across the system."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.h3,{id:"21-joinexamrequestdto",children:["21. ",(0,i.jsx)(s.strong,{children:"JoinExamRequestDTO"})]}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Type"}),": Data Transfer Object (DTO)"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Purpose"}),": Represents a request for a candidate to join an exam session."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Key Responsibilities"}),":","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Encapsulate data required for a candidate to join an ongoing exam session."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.h3,{id:"22-newexamrequestdto",children:["22. ",(0,i.jsx)(s.strong,{children:"NewExamRequestDTO"})]}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Type"}),": Data Transfer Object (DTO)"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Purpose"}),": Represents a request to create a new exam."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Key Responsibilities"}),":","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Encapsulate data required to create a new exam."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.h3,{id:"23-newexamresponsedto",children:["23. ",(0,i.jsx)(s.strong,{children:"NewExamResponseDTO"})]}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Type"}),": Data Transfer Object (DTO)"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Purpose"}),": Represents the response data after successfully creating a new exam."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Key Responsibilities"}),":","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Provide feedback on the successful creation of a new exam."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.h3,{id:"24-removereportsrequestdto",children:["24. ",(0,i.jsx)(s.strong,{children:"RemoveReportsRequestDTO"})]}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Type"}),": Data Transfer Object (DTO)"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Purpose"}),": Represents a request to remove reports related to an exam session."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Key Responsibilities"}),":","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Encapsulate data required to remove exam-related reports."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.h3,{id:"25-submitanswerrequestdto",children:["25. ",(0,i.jsx)(s.strong,{children:"SubmitAnswerRequestDTO"})]}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Type"}),": Data Transfer Object (DTO)"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Purpose"}),": Represents a request from a candidate to submit an answer during an exam session."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Key Responsibilities"}),":","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Encapsulate data about the answer submission process."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.h3,{id:"26-submitanswerresponsedto",children:["26. ",(0,i.jsx)(s.strong,{children:"SubmitAnswerResponseDTO"})]}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Type"}),": Data Transfer Object (DTO)"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Purpose"}),": Represents the response after a candidate submits an answer."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Key Responsibilities"}),":","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Provide feedback on the status of the answer submission."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.h3,{id:"27-submitinstructionsenum",children:["27. ",(0,i.jsx)(s.strong,{children:"SubmitInstructionsEnum"})]}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Type"}),": Enum"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Purpose"}),": Defines the various instructions or statuses related to answer submissions during an exam."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Key Responsibilities"}),":","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Standardize the submission statuses or instructions related to answer submission during an exam session."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h3,{id:"how-these-components-work-together",children:"How These Components Work Together"}),"\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Controller Layer"}),":"]}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["Controllers like ",(0,i.jsx)(s.code,{children:"ExamController"}),", ",(0,i.jsx)(s.code,{children:"ExamControllerClient"}),", and ",(0,i.jsx)(s.code,{children:"ExamControllerSocket"})," are responsible for handling HTTP and WebSocket requests related to the lifecycle of an exam session."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Service Layer"}),":"]}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"ExamService"}),", ",(0,i.jsx)(s.code,{children:"ExamServiceImpl"}),", and ",(0,i.jsx)(s.code,{children:"ExamServiceMemoryImpl"})," provide business logic for creating, managing, and monitoring exam sessions. They interact with the repository layer to perform operations related to exam data."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Repository Layer"}),":"]}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"ExamSessionRepository"}),", ",(0,i.jsx)(s.code,{children:"ExamSessionNodeRepository"}),", and ",(0,i.jsx)(s.code,{children:"ExamDefaultRepository"})," are responsible for interacting with the database to perform CRUD operations on exam sessions, nodes, and default exam settings."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Data Transfer Objects (DTOs)"}),":"]}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["DTOs such as ",(0,i.jsx)(s.code,{children:"NewExamRequestDTO"}),", ",(0,i.jsx)(s.code,{children:"ExamSessionDTO"}),", and ",(0,i.jsx)(s.code,{children:"SubmitAnswerRequestDTO"})," act as intermediaries for transferring data between the client, service, and repository layers. These DTOs ensure standardized data exchange across different layers."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Enums"}),":"]}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["Enums like ",(0,i.jsx)(s.code,{children:"ExamStatusEnum"}),", ",(0,i.jsx)(s.code,{children:"ExamNodeStatusEnum"}),", and ",(0,i.jsx)(s.code,{children:"SubmitInstructionsEnum"})," ensure consistent representation of statuses and instructions throughout the system, improving maintainability and reducing errors."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h3,{id:"conclusion",children:"Conclusion"}),"\n",(0,i.jsxs)(s.p,{children:["The ",(0,i.jsx)(s.code,{children:"exam"})," package is a comprehensive module that handles all aspects of the exam lifecycle in the ",(0,i.jsx)(s.strong,{children:"AutoBot Admin"})," application. From creating and managing exam sessions to handling real-time interactions and responses, this package ensures smooth communication between the client, server, and database layers. By using DTOs and enums, the"]})]})}function x(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>l,x:()=>o});var i=n(6540);const r={},t=i.createContext(r);function l(e){const s=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),i.createElement(t.Provider,{value:s},e.children)}}}]);