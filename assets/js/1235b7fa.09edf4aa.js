"use strict";(self.webpackChunkdocs_spa=self.webpackChunkdocs_spa||[]).push([[9904],{8694:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>d,contentTitle:()=>r,default:()=>h,frontMatter:()=>i,metadata:()=>c,toc:()=>l});var t=n(4848),o=n(8453);const i={},r=void 0,c={id:"autobot-admin/exam-package/socker-service",title:"socker-service",description:"Documentation for WebSocket and Messaging Components",source:"@site/docs/autobot-admin/exam-package/socker-service.md",sourceDirName:"autobot-admin/exam-package",slug:"/autobot-admin/exam-package/socker-service",permalink:"/autobot-docs/docs/autobot-admin/exam-package/socker-service",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/autobot-admin/exam-package/socker-service.md",tags:[],version:"current",frontMatter:{}},d={},l=[{value:"Documentation for WebSocket and Messaging Components",id:"documentation-for-websocket-and-messaging-components",level:3},{value:"<strong><code>CustomSocketMessage</code></strong>",id:"customsocketmessage",level:3},{value:"Annotations:",id:"annotations",level:4},{value:"Fields:",id:"fields",level:4},{value:"<strong><code>SocketMessagePayloadTypesEnum</code></strong>",id:"socketmessagepayloadtypesenum",level:3},{value:"Enum Values:",id:"enum-values",level:4},{value:"<strong><code>WebConfig</code></strong>",id:"webconfig",level:3},{value:"Method:",id:"method",level:4},{value:"CORS Settings:",id:"cors-settings",level:4},{value:"<strong><code>WebSocketConfig</code></strong>",id:"websocketconfig",level:3},{value:"Annotations:",id:"annotations-1",level:4},{value:"Methods:",id:"methods",level:4},{value:"Summary:",id:"summary",level:3}];function a(e){const s={code:"code",h3:"h3",h4:"h4",hr:"hr",li:"li",p:"p",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.h3,{id:"documentation-for-websocket-and-messaging-components",children:"Documentation for WebSocket and Messaging Components"}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h3,{id:"customsocketmessage",children:(0,t.jsx)(s.strong,{children:(0,t.jsx)(s.code,{children:"CustomSocketMessage"})})}),"\n",(0,t.jsxs)(s.p,{children:["This class represents a message structure that is used for WebSocket communication between the client and server. The message consists of two main fields: the type of the message (",(0,t.jsx)(s.code,{children:"payloadType"}),") and the actual content (",(0,t.jsx)(s.code,{children:"payload"}),")."]}),"\n",(0,t.jsx)(s.h4,{id:"annotations",children:"Annotations:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:(0,t.jsx)(s.code,{children:"@Getter"})}),": Generates getter methods for the class fields."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:(0,t.jsx)(s.code,{children:"@Setter"})}),": Generates setter methods for the class fields."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:(0,t.jsx)(s.code,{children:"@NoArgsConstructor"})}),": Generates a no-argument constructor for the class."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:(0,t.jsx)(s.code,{children:"@JsonInclude(JsonInclude.Include.NON_NULL)"})}),": Ensures that only non-null fields are included in the serialized JSON."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:(0,t.jsx)(s.code,{children:"@JsonIgnoreProperties(ignoreUnknown = true)"})}),": Ignores unknown properties during JSON deserialization to prevent errors."]}),"\n"]}),"\n",(0,t.jsx)(s.h4,{id:"fields",children:"Fields:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:(0,t.jsx)(s.code,{children:"payloadType"})}),": A ",(0,t.jsx)(s.code,{children:"String"}),' that represents the type of message being sent (e.g., "START_EXAM_NOTIFICATION").']}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:(0,t.jsx)(s.code,{children:"payload"})}),": An ",(0,t.jsx)(s.code,{children:"Object"})," that holds the actual data of the message."]}),"\n"]}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h3,{id:"socketmessagepayloadtypesenum",children:(0,t.jsx)(s.strong,{children:(0,t.jsx)(s.code,{children:"SocketMessagePayloadTypesEnum"})})}),"\n",(0,t.jsx)(s.p,{children:"This enum defines the possible types of WebSocket messages that can be exchanged between the server and client."}),"\n",(0,t.jsx)(s.h4,{id:"enum-values",children:"Enum Values:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:(0,t.jsx)(s.code,{children:"START_EXAM_NOTIFICATION"})}),": Indicates that a message related to starting an exam is being transmitted."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:(0,t.jsx)(s.code,{children:"STOP_EXAM_NOTIFICATION"})}),": Indicates that a message related to stopping an exam is being transmitted."]}),"\n"]}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h3,{id:"webconfig",children:(0,t.jsx)(s.strong,{children:(0,t.jsx)(s.code,{children:"WebConfig"})})}),"\n",(0,t.jsx)(s.p,{children:"This class configures Cross-Origin Resource Sharing (CORS) settings for the application. It ensures that the backend server allows requests from specified origins and controls what HTTP methods and headers are permissible."}),"\n",(0,t.jsx)(s.h4,{id:"method",children:"Method:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:(0,t.jsx)(s.code,{children:"addCorsMappings(CorsRegistry registry)"})}),": Configures CORS settings for all endpoints (",(0,t.jsx)(s.code,{children:'"/**"'}),"). This allows requests from any origin (",(0,t.jsx)(s.code,{children:'allowedOrigins("*")'}),") and specifies acceptable methods, headers, and the duration the settings are cached (",(0,t.jsx)(s.code,{children:"maxAge(3600)"}),")."]}),"\n"]}),"\n",(0,t.jsx)(s.h4,{id:"cors-settings",children:"CORS Settings:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Allowed Methods"}),": ",(0,t.jsx)(s.code,{children:"POST"}),", ",(0,t.jsx)(s.code,{children:"GET"}),", ",(0,t.jsx)(s.code,{children:"DELETE"}),", ",(0,t.jsx)(s.code,{children:"PUT"}),", ",(0,t.jsx)(s.code,{children:"OPTIONS"})]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Allowed Headers"}),": ",(0,t.jsx)(s.code,{children:"Accept"}),", ",(0,t.jsx)(s.code,{children:"Content-Type"}),", ",(0,t.jsx)(s.code,{children:"Origin"}),", ",(0,t.jsx)(s.code,{children:"Authorization"}),", ",(0,t.jsx)(s.code,{children:"X-Auth-Token"})]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Exposed Headers"}),": ",(0,t.jsx)(s.code,{children:"X-Auth-Token"}),", ",(0,t.jsx)(s.code,{children:"Authorization"})]}),"\n"]}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h3,{id:"websocketconfig",children:(0,t.jsx)(s.strong,{children:(0,t.jsx)(s.code,{children:"WebSocketConfig"})})}),"\n",(0,t.jsx)(s.p,{children:"This class configures the WebSocket message broker and STOMP (Simple Text Oriented Messaging Protocol) endpoints for real-time communication between the client and server."}),"\n",(0,t.jsx)(s.h4,{id:"annotations-1",children:"Annotations:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:(0,t.jsx)(s.code,{children:"@Configuration"})}),": Marks this class as a source of bean definitions."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:(0,t.jsx)(s.code,{children:"@EnableWebSocketMessageBroker"})}),": Enables WebSocket message handling backed by a message broker."]}),"\n"]}),"\n",(0,t.jsx)(s.h4,{id:"methods",children:"Methods:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:(0,t.jsx)(s.code,{children:"configureMessageBroker(MessageBrokerRegistry config)"})}),": Configures the message broker that routes messages between the server and connected clients."]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:(0,t.jsx)(s.code,{children:'enableSimpleBroker("/topic")'})}),": Defines ",(0,t.jsx)(s.code,{children:"/topic"})," as the message destination prefix for broadcasting messages."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:(0,t.jsx)(s.code,{children:"setHeartbeatValue(new long[] {10000, 20000})"})}),": Sets the interval for heartbeats to check the connection's health."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:(0,t.jsx)(s.code,{children:"setTaskScheduler(new DefaultManagedTaskScheduler())"})}),": Provides a task scheduler for the heartbeat mechanism."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:(0,t.jsx)(s.code,{children:'setApplicationDestinationPrefixes("/sock")'})}),": Sets the application destination prefix for sending messages from the client to the server."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:(0,t.jsx)(s.code,{children:"registerStompEndpoints(StompEndpointRegistry registry)"})}),": Registers WebSocket endpoints that clients will use to establish a connection."]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:(0,t.jsx)(s.code,{children:'addEndpoint("/sock-endpoint")'})}),": Defines ",(0,t.jsx)(s.code,{children:"/sock-endpoint"})," as the WebSocket endpoint that clients will connect to."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:(0,t.jsx)(s.code,{children:"setAllowedOrigins()"})}),": Specifies the allowed origins (e.g., ",(0,t.jsx)(s.code,{children:"http://localhost:9090"}),", ",(0,t.jsx)(s.code,{children:"http://localhost:4200"}),") from which clients can connect."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:(0,t.jsx)(s.code,{children:"withSockJS()"})}),": Enables SockJS support as a fallback for clients that don't support WebSocket."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h3,{id:"summary",children:"Summary:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:(0,t.jsx)(s.code,{children:"CustomSocketMessage"})})," defines the structure for messages exchanged via WebSocket."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:(0,t.jsx)(s.code,{children:"SocketMessagePayloadTypesEnum"})})," lists the types of payloads that can be sent."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:(0,t.jsx)(s.code,{children:"WebConfig"})})," sets up CORS configurations, allowing requests from multiple origins with specific methods and headers."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:(0,t.jsx)(s.code,{children:"WebSocketConfig"})})," configures the WebSocket and STOMP protocol, enabling real-time communication between the server and clients through defined endpoints."]}),"\n"]})]})}function h(e={}){const{wrapper:s}={...(0,o.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>r,x:()=>c});var t=n(6540);const o={},i=t.createContext(o);function r(e){const s=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),t.createElement(i.Provider,{value:s},e.children)}}}]);